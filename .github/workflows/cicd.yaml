name: Secure CI/CD Pipeline


on:
  push:
    branches:
      - main

jobs:
  sonar:
    name: 🔍 SonarQube Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🚨 Run SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

  nodejs:
    name: ⚙️ Node.js Setup and Tests
    runs-on: ubuntu-latest
    needs: sonar
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v4

      - name: ⚙️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: 📦 Install Dependencies
        run: npm install

  docker-build-and-push:
    name: 🐳 Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: [sonar, nodejs]
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 🔐 Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
  
      - name: Build, tag, and push docker image to Amazon ECR
        env:
            REGISTRY: ${{ secrets.REGISTRY }}
            REPOSITORY: ${{ secrets.REPOSITORY}}
            IMAGE_TAG: ${{ secrets.IMAGE_TAG }}
        run: |
            docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

  trivy:
    name: 🛡️ Trivy Vulnerability Scan
    runs-on: ubuntu-latest
    needs: docker-build-and-push
    steps:
      - name: 📥 Checkout Repository
        uses: actions/checkout@v3

      - name: 📥 Install Trivy
        run: |
          curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sudo sh -s -- -b /usr/local/bin

      - name: 🔍 FS Scan with Trivy
        run: trivy fs --format table -o fs-report.json .

      - name: 📤 Upload Trivy Report
        uses: actions/upload-artifact@v4
        with:
          name: trivy-fs-report
          path: fs-report.json

      - name: Gitleaks Installation
        run: sudo apt install gitleaks -y
      - name: Gitleaks Code Scan
        run: gitleaks detect source . -r gitleaks-report.json -f json